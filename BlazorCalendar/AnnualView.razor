@using BlazorCalendar.Models
@using BlazorCalendar.Styles

@inherits CalendarBase

@{
	string labelMonth = "";
	string CSSbackground = "";	
}
<style>
	* {
		--month-columns: @Months;
		--task-columns: 7;/* @(TasksList.GroupBy(g=>g.Key).Count() + 1); */
	}
</style>

<section class="calendar-container">

	@for(var month = 0; month < Months; month++)
	{
		m = FirstDate.AddMonths(month);
		var day = new DateTime(m.Year, m.Month, 1);
		labelMonth = day.ToString("MMMM");

		<div class="month-column">
			<div class="month-label">@labelMonth</div>

			@for(var i = 0; i < DateTime.DaysInMonth(m.Year, m.Month); i++)
			{
				CSSbackground = "";
				var j = day.AddDays(i);

				var d = j.DayOfWeek;
				if(d == DayOfWeek.Saturday)
					CSSbackground = $"background:{SaturdayColor}";
				if(d == DayOfWeek.Sunday)
					CSSbackground = $"background:{SundayColor}";
				string holiday = "";
				if(PublicHolidays?.TryGetValue(new DateOnly(j.Year, j.Month, j.Day), out holiday) ?? false)
				{
					CSSbackground = $"background:{HolidayColor}";
				}

				if(j == DateTime.Today)
				{
					CSSbackground += $" yearlytoday";
				}

				<div class="day" style="@CSSbackground" title="@holiday">@j.ToString("ddd") @j.Day</div>


			}
			
			<div class="task" style="--who:@(2);--day:@(1+1);--dur:2">TEST</div>
			<div class="task" style="--who:@(3);--day:@(3+1);--dur:2">TEST</div>
			<div class="task" style="--who:@(4);--day:@(4+1);--dur:2">TEST</div>
			@* <div class="task" style="--who:@(5);--day:@(1+1);--dur:30">TEST</div> *@

			@foreach(var t in TasksList.Where(t => t.DateStart.Month == m.Month).ToList())
			{
				<div class="task" style="--who:@(t.Key + 1);--day:@(@t.DateStart.Day + 1);--dur:@t.Duration">@t.Code</div> 
			}

		</div>
		
	}

</section>